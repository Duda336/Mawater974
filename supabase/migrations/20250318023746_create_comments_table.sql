-- Create comments table
CREATE TABLE IF NOT EXISTS public.comments (
    id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    car_id bigint NOT NULL REFERENCES public.cars(id) ON DELETE CASCADE,
    user_id uuid NOT NULL REFERENCES public.profiles(id) ON DELETE CASCADE,
    content text NOT NULL,
    created_at timestamptz NOT NULL DEFAULT now(),
    updated_at timestamptz NOT NULL DEFAULT now()
);

-- Add RLS policies
ALTER TABLE public.comments ENABLE ROW LEVEL SECURITY;

-- Allow public read access
DO $$ BEGIN
    CREATE POLICY "Allow public read access"
    ON public.comments
    FOR SELECT
    USING (true);
EXCEPTION
    WHEN duplicate_object THEN NULL;
END $$;

-- Allow authenticated users to create comments
DO $$ BEGIN
    CREATE POLICY "Allow authenticated users to create comments"
    ON public.comments
    FOR INSERT
    TO authenticated
    WITH CHECK (true);
EXCEPTION
    WHEN duplicate_object THEN NULL;
END $$;

-- Allow users to update their own comments
DO $$ BEGIN
    CREATE POLICY "Allow users to update their own comments"
    ON public.comments
    FOR UPDATE
    TO authenticated
    USING (auth.uid() = user_id)
    WITH CHECK (auth.uid() = user_id);
EXCEPTION
    WHEN duplicate_object THEN NULL;
END $$;

-- Allow users to delete their own comments
DO $$ BEGIN
    CREATE POLICY "Allow users to delete their own comments"
    ON public.comments
    FOR DELETE
    TO authenticated
    USING (auth.uid() = user_id);
EXCEPTION
    WHEN duplicate_object THEN NULL;
END $$;

-- Enable realtime subscriptions
DO $$ BEGIN
    ALTER PUBLICATION supabase_realtime ADD TABLE comments;
EXCEPTION
    WHEN duplicate_object THEN NULL;
END $$;
