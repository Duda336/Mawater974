-- Create countries table
CREATE TABLE IF NOT EXISTS public.countries (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  code VARCHAR(10) NOT NULL UNIQUE,
  name VARCHAR(255) NOT NULL,
  name_ar VARCHAR(255) NOT NULL,
  currency_code VARCHAR(10) NOT NULL,
  currency_symbol VARCHAR(10) NOT NULL,
  currency_name VARCHAR(255) NOT NULL,
  currency_name_ar VARCHAR(255) NOT NULL,
  phone_code VARCHAR(10) NOT NULL,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create cities table
CREATE TABLE IF NOT EXISTS public.cities (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  country_id BIGINT REFERENCES public.countries(id) NOT NULL,
  name VARCHAR(255) NOT NULL,
  name_ar VARCHAR(255) NOT NULL,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Add RLS policies for countries
ALTER TABLE public.countries ENABLE ROW LEVEL SECURITY;

-- Drop existing policies if they exist
DROP POLICY IF EXISTS "Anyone can read countries" ON public.countries;
DROP POLICY IF EXISTS "Only admins can insert countries" ON public.countries;
DROP POLICY IF EXISTS "Only admins can update countries" ON public.countries;
DROP POLICY IF EXISTS "Only admins can delete countries" ON public.countries;

-- Allow anyone to read countries
CREATE POLICY "Anyone can read countries" 
  ON public.countries 
  FOR SELECT 
  USING (true);

-- Only allow admins to modify countries
CREATE POLICY "Only admins can insert countries" 
  ON public.countries 
  FOR INSERT 
  WITH CHECK ((SELECT role FROM public.profiles WHERE id = auth.uid()) = 'admin');

CREATE POLICY "Only admins can update countries" 
  ON public.countries 
  FOR UPDATE 
  USING ((SELECT role FROM public.profiles WHERE id = auth.uid()) = 'admin');

CREATE POLICY "Only admins can delete countries" 
  ON public.countries 
  FOR DELETE 
  USING ((SELECT role FROM public.profiles WHERE id = auth.uid()) = 'admin');

-- Add RLS policies for cities
ALTER TABLE public.cities ENABLE ROW LEVEL SECURITY;

-- Drop existing policies if they exist
DROP POLICY IF EXISTS "Anyone can read cities" ON public.cities;
DROP POLICY IF EXISTS "Only admins can insert cities" ON public.cities;
DROP POLICY IF EXISTS "Only admins can update cities" ON public.cities;
DROP POLICY IF EXISTS "Only admins can delete cities" ON public.cities;

-- Allow anyone to read cities
CREATE POLICY "Anyone can read cities" 
  ON public.cities 
  FOR SELECT 
  USING (true);

-- Only allow admins to modify cities
CREATE POLICY "Only admins can insert cities" 
  ON public.cities 
  FOR INSERT 
  WITH CHECK ((SELECT role FROM public.profiles WHERE id = auth.uid()) = 'admin');

CREATE POLICY "Only admins can update cities" 
  ON public.cities 
  FOR UPDATE 
  USING ((SELECT role FROM public.profiles WHERE id = auth.uid()) = 'admin');

CREATE POLICY "Only admins can delete cities" 
  ON public.cities 
  FOR DELETE 
  USING ((SELECT role FROM public.profiles WHERE id = auth.uid()) = 'admin');

-- Insert initial countries if they don't exist
DO $$
BEGIN
  -- Qatar
  IF NOT EXISTS (SELECT 1 FROM public.countries WHERE code = 'QA') THEN
    INSERT INTO public.countries (code, name, name_ar, currency_code, currency_symbol, currency_name, currency_name_ar, phone_code)
    VALUES ('QA', 'Qatar', 'قطر', 'QAR', 'ر.ق', 'Qatari Riyal', 'ريال قطري', '+974');
  END IF;
  
  -- Saudi Arabia
  IF NOT EXISTS (SELECT 1 FROM public.countries WHERE code = 'SA') THEN
    INSERT INTO public.countries (code, name, name_ar, currency_code, currency_symbol, currency_name, currency_name_ar, phone_code)
    VALUES ('SA', 'Saudi Arabia', 'المملكة العربية السعودية', 'SAR', 'ر.س', 'Saudi Riyal', 'ريال سعودي', '+966');
  END IF;
  
  -- UAE
  IF NOT EXISTS (SELECT 1 FROM public.countries WHERE code = 'AE') THEN
    INSERT INTO public.countries (code, name, name_ar, currency_code, currency_symbol, currency_name, currency_name_ar, phone_code)
    VALUES ('AE', 'United Arab Emirates', 'الإمارات العربية المتحدة', 'AED', 'د.إ', 'UAE Dirham', 'درهم إماراتي', '+971');
  END IF;
  
  -- Kuwait
  IF NOT EXISTS (SELECT 1 FROM public.countries WHERE code = 'KW') THEN
    INSERT INTO public.countries (code, name, name_ar, currency_code, currency_symbol, currency_name, currency_name_ar, phone_code)
    VALUES ('KW', 'Kuwait', 'الكويت', 'KWD', 'د.ك', 'Kuwaiti Dinar', 'دينار كويتي', '+965');
  END IF;
  
  -- Syria
  IF NOT EXISTS (SELECT 1 FROM public.countries WHERE code = 'SY') THEN
    INSERT INTO public.countries (code, name, name_ar, currency_code, currency_symbol, currency_name, currency_name_ar, phone_code)
    VALUES ('SY', 'Syria', 'سوريا', 'SYP', 'ل.س', 'Syrian Pound', 'ليرة سورية', '+963');
  END IF;
END $$;

-- Insert initial cities for Qatar if they don't exist
DO $$
DECLARE
  qatar_id BIGINT;
BEGIN
  SELECT id INTO qatar_id FROM public.countries WHERE code = 'QA';
  
  -- Doha
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = qatar_id AND name = 'Doha') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (qatar_id, 'Doha', 'الدوحة');
  END IF;
  
  -- Al Wakrah
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = qatar_id AND name = 'Al Wakrah') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (qatar_id, 'Al Wakrah', 'الوكرة');
  END IF;
  
  -- Al Khor
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = qatar_id AND name = 'Al Khor') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (qatar_id, 'Al Khor', 'الخور');
  END IF;
  
  -- Lusail
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = qatar_id AND name = 'Lusail') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (qatar_id, 'Lusail', 'لوسيل');
  END IF;
  
  -- Al Rayyan
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = qatar_id AND name = 'Al Rayyan') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (qatar_id, 'Al Rayyan', 'الريان');
  END IF;
  
  -- Umm Salal
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = qatar_id AND name = 'Umm Salal') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (qatar_id, 'Umm Salal', 'أم صلال');
  END IF;
  
  -- Al Daayen
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = qatar_id AND name = 'Al Daayen') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (qatar_id, 'Al Daayen', 'الظعاين');
  END IF;
  
  -- Al Shamal
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = qatar_id AND name = 'Al Shamal') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (qatar_id, 'Al Shamal', 'الشمال');
  END IF;
  
  -- Al Shahaniya
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = qatar_id AND name = 'Al Shahaniya') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (qatar_id, 'Al Shahaniya', 'الشحانية');
  END IF;
END $$;

-- Insert initial cities for Saudi Arabia if they don't exist
DO $$
DECLARE
  saudi_id BIGINT;
BEGIN
  SELECT id INTO saudi_id FROM public.countries WHERE code = 'SA';
  
  -- Riyadh
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = saudi_id AND name = 'Riyadh') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (saudi_id, 'Riyadh', 'الرياض');
  END IF;
  
  -- Jeddah
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = saudi_id AND name = 'Jeddah') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (saudi_id, 'Jeddah', 'جدة');
  END IF;
  
  -- Mecca
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = saudi_id AND name = 'Mecca') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (saudi_id, 'Mecca', 'مكة المكرمة');
  END IF;
  
  -- Al Qasim
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = saudi_id AND name = 'Al Qasim') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (saudi_id, 'Al Qasim', 'القصيم');
  END IF;
  
  -- Al Khobar
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = saudi_id AND name = 'Al Khobar') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (saudi_id, 'Al Khobar', 'الخبر');
  END IF;
  
  -- Medina
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = saudi_id AND name = 'Medina') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (saudi_id, 'Medina', 'المدينة المنورة');
  END IF;
  
  -- Jizan
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = saudi_id AND name = 'Jizan') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (saudi_id, 'Jizan', 'جيزان');
  END IF;
  
  -- Hail
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = saudi_id AND name = 'Hail') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (saudi_id, 'Hail', 'الهيم');
  END IF;

  
  -- Dammam
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = saudi_id AND name = 'Dammam') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (saudi_id, 'Dammam', 'الدمام');
  END IF;
END $$;

-- Insert initial cities for UAE if they don't exist
DO $$
DECLARE
  uae_id BIGINT;
BEGIN
  SELECT id INTO uae_id FROM public.countries WHERE code = 'AE';
  
  -- Dubai
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = uae_id AND name = 'Dubai') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (uae_id, 'Dubai', 'دبي');
  END IF;
  
  -- Abu Dhabi
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = uae_id AND name = 'Abu Dhabi') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (uae_id, 'Abu Dhabi', 'أبو ظبي');
  END IF;
  
  -- Sharjah
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = uae_id AND name = 'Sharjah') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (uae_id, 'Sharjah', 'الشارقة');
  END IF;
  
  -- Ajman
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = uae_id AND name = 'Ajman') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (uae_id, 'Ajman', 'عجمان');
  END IF;
  
  -- Fujairah
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = uae_id AND name = 'Fujairah') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (uae_id, 'Fujairah', 'فجيرة');
  END IF;
  
  -- Ain
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = uae_id AND name = 'Ain') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (uae_id, 'Al Ain', 'العين');
  END IF;
  
  -- Ras Al Khaimah
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = uae_id AND name = 'Ras Al Khaimah') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (uae_id, 'Ras Al Khaimah', 'رأس الخيمة');
  END IF;
END $$;

-- Insert initial cities for Kuwait if they don't exist
DO $$
DECLARE
  kuwait_id BIGINT;
BEGIN
  SELECT id INTO kuwait_id FROM public.countries WHERE code = 'KW';
  
  -- Kuwait City
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = kuwait_id AND name = 'Kuwait City') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (kuwait_id, 'Kuwait City', 'مدينة الكويت');
  END IF;
  
  -- Hawalli
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = kuwait_id AND name = 'Hawalli') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (kuwait_id, 'Hawalli', 'حولي');
  END IF;
  
  -- Al Farwaniyah
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = kuwait_id AND name = 'Al Farwaniyah') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (kuwait_id, 'Al Farwaniyah', 'الفروانيه');
  END IF;
  
  -- Ahmadi
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = kuwait_id AND name = 'Ahmadi') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (kuwait_id, 'Ahmadi', 'الأحمدي');
  END IF;
END $$;

-- Insert initial cities for Syria if they don't exist
DO $$
DECLARE
  syria_id BIGINT;
BEGIN
  SELECT id INTO syria_id FROM public.countries WHERE code = 'SY';
  
  -- Damascus
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = syria_id AND name = 'Damascus') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (syria_id, 'Damascus', 'دمشق');
  END IF;
  
  -- Aleppo
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = syria_id AND name = 'Aleppo') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (syria_id, 'Aleppo', 'حلب');
  END IF;
  
  -- Homs
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = syria_id AND name = 'Homs') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (syria_id, 'Homs', 'حمص');
  END IF;
  
  -- Latakia
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = syria_id AND name = 'Latakia') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (syria_id, 'Latakia', 'اللاذقية');
  END IF;
  
  -- Hama
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = syria_id AND name = 'Hama') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (syria_id, 'Hama', 'حماة');
  END IF;
  
  -- Tartous
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = syria_id AND name = 'Tartous') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (syria_id, 'Tartous', 'طرطوس');
  END IF;

  -- Daraa
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = syria_id AND name = 'Daraa') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (syria_id, 'Daraa', 'درعا');
  END IF;

  -- Deir ez-zor
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = syria_id AND name = 'Deir ez-zor') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (syria_id, 'Deir ez-zor', 'دير الزور');
  END IF; 
  
  -- Idlib
  IF NOT EXISTS (SELECT 1 FROM public.cities WHERE country_id = syria_id AND name = 'Idlib') THEN
    INSERT INTO public.cities (country_id, name, name_ar)
    VALUES (syria_id, 'Idlib', 'إدلب');
  END IF;
END $$;

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_cities_country_id ON public.cities(country_id);
CREATE INDEX IF NOT EXISTS idx_countries_code ON public.countries(code);

-- Add triggers to update updated_at timestamp
CREATE OR REPLACE FUNCTION public.update_timestamp()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_countries_timestamp
BEFORE UPDATE ON public.countries
FOR EACH ROW
EXECUTE FUNCTION public.update_timestamp();

CREATE TRIGGER update_cities_timestamp
BEFORE UPDATE ON public.cities
FOR EACH ROW
EXECUTE FUNCTION public.update_timestamp();
